<?php

/**
 * This is the model base class for the table "sys_user_limited_model".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserLimitedModelCore".
 *
 * Columns in table "sys_user_limited_model" available as properties of the model,
 * followed by relations of table "sys_user_limited_model" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property string $table_name
 * @property string $model_name
 * @property integer $limited
 *
 * @property Users $user
 */
abstract class BaseUserLimitedModelCore extends GxActiveRecord {

	public $modelName           = __CLASS__;
	public $rstatus_fieldname   = 'deleted';
	
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'sys_user_limited_model';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'User Limited Model|User Limited Models', $n);
	}

	public static function representingColumn() {
		return 'model_name';
	}

	public function behaviors(){
		return array( 'CAdvancedArFindBehavior' => array(
		'class' => 'common.extensions.CAdvancedArFindBehavior')); 
	}

	public function rules() {
		return array(
			array('user_id, table_name, model_name', 'required'),
			array('user_id, limited', 'numerical', 'integerOnly'=>true),
			array('limited', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, table_name, model_name, limited', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'table_name' => Yii::t('app', 'Table Name'),
			'model_name' => Yii::t('app', 'Model Name'),
			'limited' => Yii::t('app', 'Limited'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('table_name', $this->table_name, true);
		$criteria->compare('model_name', $this->model_name, true);
		$criteria->compare('limited', $this->limited);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}